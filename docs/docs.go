// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/author": {
            "get": {
                "description": "This API retrieves all authors based on a name filter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AUTHOR"
                ],
                "summary": "Get All Authors",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Author Name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genproto.Authors"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/author/author/{id}": {
            "get": {
                "description": "This api logs book in",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AUTHOR"
                ],
                "summary": "GET AUTHOR BOOK",
                "parameters": [
                    {
                        "type": "string",
                        "description": "AUTHOR ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/genproto.UserBook"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/author/create": {
            "post": {
                "description": "This api create author",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AUTHOR"
                ],
                "summary": "CREATE AUTHOR",
                "parameters": [
                    {
                        "description": "Author",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.AuthorCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/genproto.Author"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/author/update": {
            "put": {
                "description": "This api updatedes author",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AUTHOR"
                ],
                "summary": "UPDATES AUTHOR",
                "parameters": [
                    {
                        "description": "Author",
                        "name": "author",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.Author"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "author updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/author/{id}": {
            "get": {
                "description": "This API gets an author by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AUTHOR"
                ],
                "summary": "GET AUTHOR",
                "parameters": [
                    {
                        "type": "string",
                        "description": "AUTHOR ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genproto.Author"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "This api deletes author by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AUTHOR"
                ],
                "summary": "DELETE AUTHOR",
                "parameters": [
                    {
                        "type": "string",
                        "description": "AUTHOR ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "author deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/book/all": {
            "get": {
                "description": "This api get all books",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BOOK"
                ],
                "summary": "GET ALL BOOKS",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Book Title",
                        "name": "title",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genproto.TitleFilter"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/book/create": {
            "post": {
                "description": "This api create book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BOOK"
                ],
                "summary": "CREATE BOOK",
                "parameters": [
                    {
                        "description": "Book",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.BookCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/genproto.Book"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/book/del/{id}": {
            "delete": {
                "description": "This api logs book in",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BOOK"
                ],
                "summary": "DELETE BOOK",
                "parameters": [
                    {
                        "type": "string",
                        "description": "BOOK ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/genproto.Void"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/book/search": {
            "get": {
                "description": "This API searches for books by title or author.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BOOK"
                ],
                "summary": "Search Books",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Book Title",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Author Name",
                        "name": "author",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genproto.Books"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/book/update": {
            "put": {
                "description": "This api updatedes book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BOOK"
                ],
                "summary": "UPDATES BOOK",
                "parameters": [
                    {
                        "description": "Book",
                        "name": "book",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.BookCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "book updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/book/{title}": {
            "get": {
                "description": "This api get book by title",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BOOK"
                ],
                "summary": "GET BOOK",
                "parameters": [
                    {
                        "type": "string",
                        "description": "BOOK TITLE",
                        "name": "title",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genproto.Book"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/borrower/all": {
            "get": {
                "description": "This api get all borrowers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BORROWER"
                ],
                "summary": "GET ALL BORROWERS",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genproto.Borrowers"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/borrower/create": {
            "post": {
                "description": "This api create borrower",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BORROWER"
                ],
                "summary": "CREATE BORROWER",
                "parameters": [
                    {
                        "description": "Borrower",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.BorrowerCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/genproto.Borrower"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/borrower/history/{id}": {
            "get": {
                "description": "This api GETS borrower by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BORROWER"
                ],
                "summary": "GET USER BORROWER HISTORY",
                "parameters": [
                    {
                        "type": "string",
                        "description": "USER ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genproto.BorrowingHistory"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/borrower/overdue": {
            "get": {
                "description": "This API retrieves a list of books that are overdue.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BORROWER"
                ],
                "summary": "Get Overdue Books",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genproto.BorrowedBooks"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/borrower/update": {
            "put": {
                "description": "This api updates borrower",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BORROWER"
                ],
                "summary": "UPDATES BORROWER",
                "parameters": [
                    {
                        "description": "Borrower",
                        "name": "borrower",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.BorrowerCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "borrower updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/borrower/users/{id}": {
            "get": {
                "description": "This api GETS borrower by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BORROWER"
                ],
                "summary": "GET USERS BORROWER",
                "parameters": [
                    {
                        "type": "string",
                        "description": "USER ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genproto.BorrowedBooks"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/borrower/{id}": {
            "get": {
                "description": "This api get borrower by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BORROWER"
                ],
                "summary": "GET BORROWER",
                "parameters": [
                    {
                        "type": "string",
                        "description": "BORROWER ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genproto.Borrower"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "This api deletes borrower by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BORROWER"
                ],
                "summary": "DELETES BORROWER",
                "parameters": [
                    {
                        "type": "string",
                        "description": "BORROWER ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "borrower deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/genre/all": {
            "get": {
                "description": "This api get all books by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GENRE"
                ],
                "summary": "GET ALL GENRES",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Genre Name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genproto.Genres"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/genre/create": {
            "post": {
                "description": "This api create genre",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GENRE"
                ],
                "summary": "CREATE GENRE",
                "parameters": [
                    {
                        "description": "Genre",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.GenreCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/genproto.Genre"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/genre/genre/{id}": {
            "get": {
                "description": "This api logs book in",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GENRE"
                ],
                "summary": "GET GENRE BOOK",
                "parameters": [
                    {
                        "type": "string",
                        "description": "GENRE ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/genproto.GenreBooks"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/genre/update": {
            "put": {
                "description": "This api updatedes genre",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GENRE"
                ],
                "summary": "UPDATES GENRE",
                "parameters": [
                    {
                        "description": "Genre",
                        "name": "genre",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.GenreCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "genre updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/genre/{id}": {
            "delete": {
                "description": "This api delete genre by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GENRE"
                ],
                "summary": "DELETES GENRE",
                "parameters": [
                    {
                        "type": "string",
                        "description": "GENRE ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "genre deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/genre/{name}": {
            "get": {
                "description": "This api get genre by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GENRE"
                ],
                "summary": "GET GENRE",
                "parameters": [
                    {
                        "type": "string",
                        "description": "GENRE NAME",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/genproto.Genre"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "genproto.Author": {
            "type": "object",
            "properties": {
                "Biography": {
                    "type": "string"
                },
                "Id": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                }
            }
        },
        "genproto.AuthorCreate": {
            "type": "object",
            "properties": {
                "Biography": {
                    "type": "string"
                },
                "Id": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                }
            }
        },
        "genproto.Authors": {
            "type": "object",
            "properties": {
                "Authors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genproto.Author"
                    }
                }
            }
        },
        "genproto.Book": {
            "type": "object",
            "properties": {
                "author_id": {
                    "type": "string"
                },
                "genre_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "genproto.BookCreate": {
            "type": "object",
            "properties": {
                "AuthorID": {
                    "type": "string"
                },
                "GenreID": {
                    "type": "string"
                },
                "Id": {
                    "type": "string"
                },
                "Summary": {
                    "type": "string"
                },
                "Title": {
                    "type": "string"
                }
            }
        },
        "genproto.Books": {
            "type": "object",
            "properties": {
                "Books": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genproto.Book"
                    }
                }
            }
        },
        "genproto.BorrowedBook": {
            "type": "object",
            "properties": {
                "book": {
                    "$ref": "#/definitions/genproto.Book"
                },
                "borrow_date": {
                    "type": "string"
                },
                "return_date": {
                    "type": "string"
                }
            }
        },
        "genproto.BorrowedBooks": {
            "type": "object",
            "properties": {
                "books": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genproto.BorrowedBook"
                    }
                }
            }
        },
        "genproto.Borrower": {
            "type": "object",
            "properties": {
                "BookID": {
                    "type": "string"
                },
                "BorrowDate": {
                    "type": "string"
                },
                "Id": {
                    "type": "string"
                },
                "ReturnDate": {
                    "type": "string"
                },
                "UserID": {
                    "type": "string"
                }
            }
        },
        "genproto.BorrowerCreate": {
            "type": "object",
            "properties": {
                "BookID": {
                    "type": "string"
                },
                "BorrowDate": {
                    "type": "string"
                },
                "Id": {
                    "type": "string"
                },
                "ReturnDate": {
                    "type": "string"
                },
                "UserID": {
                    "type": "string"
                }
            }
        },
        "genproto.Borrowers": {
            "type": "object",
            "properties": {
                "Borrowers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genproto.Borrower"
                    }
                }
            }
        },
        "genproto.BorrowingHistory": {
            "type": "object",
            "properties": {
                "books": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genproto.BorrowedBook"
                    }
                }
            }
        },
        "genproto.Genre": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                }
            }
        },
        "genproto.GenreBooks": {
            "type": "object",
            "properties": {
                "Books": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genproto.Book"
                    }
                }
            }
        },
        "genproto.GenreCreate": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                }
            }
        },
        "genproto.Genres": {
            "type": "object",
            "properties": {
                "Genres": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genproto.Genre"
                    }
                }
            }
        },
        "genproto.TitleFilter": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                }
            }
        },
        "genproto.UserBook": {
            "type": "object",
            "properties": {
                "Books": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genproto.Book"
                    }
                }
            }
        },
        "genproto.Void": {
            "type": "object"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	// LeftDelim:        "{{",
	// RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
